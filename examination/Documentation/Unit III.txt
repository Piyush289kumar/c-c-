MCA 101 Programming in C with Data Structure


=============
Unit - III
=============


======================================== * ========================================

Question 1: What is Data Structure?

Answer: A data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently. 

A data structure is not only used for organizing the data. It is also used for processing, retrieving, and storing data. There are different basic and advanced types of data structures that are used in almost every program or software system that has been developed. So we must have good knowledge about data structures.

Classification of Data Structure:


(1)Linear data structure: Data structure in which data elements are arranged sequentially or linearly, where each element is attached to its previous and next adjacent elements, is called a linear data structure. 

Examples of linear data structures are array, stack, queue, linked list, etc.

    (a) Static data structure: Static data structure has a fixed memory size. It is easier to access the elements in a static data structure. 

    An example of this data structure is an array.

    (b) Dynamic data structure: In dynamic data structure, the size is not fixed. It can be randomly updated during the runtime which may be considered efficient concerning the memory (space) complexity of the code. 

    Examples of this data structure are queue, stack, etc.

(2) Non-linear data structure: Data structures where data elements are not placed sequentially or linearly are called non-linear data structures. In a non-linear data structure, we canâ€™t traverse all the elements in a single run only. 

Examples of non-linear data structures are trees and graphs.



======================================== * ========================================

Question 2: What is Execution Time?

Answer: Execution time : The execution time or CPU time of a given task is defined as the time spent by the system executing that task in other way you can say the time during which a program is running. There are multiple way to measure execution time of a program.




======================================== * ========================================

Question 3: What is Stack?

Answer: Stack is a linear data structure that follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out). LIFO implies that the element that is inserted last, comes out first and FILO implies that the element that is inserted first, comes out last.

Basic Operations on Stack

In order to make manipulations in a stack, there are certain operations provided to us.

    1. push() to insert an element into the stack
    2. pop() to remove an element from the stack
    3. top() Returns the top element of the stack.
    4. isEmpty() returns true if stack is empty else false.
    5. size() returns the size of stack.
    

Types of Stacks:

1. Fixed Size Stack: As the name suggests, a fixed size stack has a fixed size and cannot grow or shrink dynamically. If the stack is full and an attempt is made to add an element to it, an overflow error occurs. If the stack is empty and an attempt is made to remove an element from it, an underflow error occurs.

2. Dynamic Size Stack: A dynamic size stack can grow or shrink dynamically. When the stack is full, it automatically increases its size to accommodate the new element, and when the stack is empty, it decreases its size. This type of stack is implemented using a linked list, as it allows for easy resizing of the stack.




======================================== * ========================================

Question 4: What is Queue?

Answer: A Queue is defined as a linear data structure that is open at both ends and the operations are performed in First In First Out (FIFO) order. We define a queue to be a list in which all additions to the list are made at one end, and all deletions from the list are made at the other end.  The element which is first pushed into the order, the operation is first performed on that.

FIFO Principle of Queue:

(a) A Queue is like a line waiting to purchase tickets, where the first person in line is the first person served. (i.e. First come first serve).

(b) Position of the entry in a queue ready to be served, that is, the first entry that will be removed from the queue, is called the front of the queue(sometimes, head of the queue), similarly, the position of the last entry in the queue, that is, the one most recently added, is called the rear (or the tail) of the queue.

Characteristics of Queue:

1. Queue can handle multiple data.
2. We can access both ends.
3. They are fast and flexible.


